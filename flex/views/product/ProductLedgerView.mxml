<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="views.util.*" width="100%" height="100%" label="Ledger">
	
	
	<mx:HTTPService 
		id="getProductLedgerEntries" 
		url="GetProductLedgerEntries.gx"
		resultFormat="e4x"
		concurrency="multiple"
		result="onGetProductLedgerEntries(event)"
		showBusyCursor="true"
		fault="parentApplication.onFailHttpRequest('Unable to get ledger entries', event)"
		method="POST"
		useProxy="false">
	</mx:HTTPService >
	
	<mx:HTTPService 
		id="getProductOrder" 
		url="GetProductOrder.gx"
		resultFormat="e4x"
		concurrency="multiple"
		result="onGetProductOrder(event)"
		showBusyCursor="true"
		fault="parentApplication.onFailHttpRequest('Unable to get order list', event)"
		method="POST"
		useProxy="false">
	</mx:HTTPService >
	
	<mx:HTTPService 
		id="saveProductLedgerEntryList" 
		url="SaveProductLedgerEntryList.gx"
		resultFormat="e4x"
		concurrency="multiple"
		result="onSaveProductLedgerEntryList(event)"
		showBusyCursor="true"
		fault="parentApplication.onFailHttpRequest('Unable to save product ledger entry list', event)"
		method="POST"
		useProxy="false">
	</mx:HTTPService>
	
	
	<mx:Script> 
		<![CDATA[
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			
			public var idLab:String;
			public var idProduct:String;
			public var productName:String;
			[Bindable]
			public var productCount:String = "";
			
			public function init():void{
				var params:Object = new Object();
				params.idProduct = idProduct;
				params.idLab = idLab;
				getProductLedgerEntries.send(params);
				
			}
			
			private function onGetProductLedgerEntries(event:ResultEvent):void{
				if(getProductLedgerEntries.lastResult.name() != "ledgerEntries"){
					Alert.show( event.result..ERROR.@message.toString(), "Error getting ledger items" );
				}
				
			}
			
			private function showAddLedgerEntryWindow():void{
				
				var ledgerEntryWindow:AddLedgerEntryWindow = new AddLedgerEntryWindow();
				//				ledgerEntryWindow.productName = this.productName;
				//				ledgerEntryWindow.idProduct = idProduct;
				//				ledgerEntryWindow.idLab = idLab;
				//				ledgerEntryWindow.productCount = productCount;
				ledgerEntryWindow.parentWindow = this;
				
				PopUpManager.addPopUp(ledgerEntryWindow,this, true)
				PopUpManager.centerPopUp(ledgerEntryWindow);
				this.setFocus();
			}
			
			private function onGetProductOrder(event:ResultEvent):void {
				if (getProductOrder.lastResult.name() != "ProductOrder") {
					Alert.show(event.result..ERROR.@message.toString());
				} else {
					if (getProductOrder.lastResult.hasOwnProperty("@canRead") && getProductOrder.lastResult.@canRead == "Y") {
						parentApplication.showProductOrder(getProductOrder.lastResult);
					} else if (getProductOrder.lastResult.hasOwnProperty("@exists") && getProductOrder.lastResult.@exists == "N") {
						Alert.show("This product order does not exist or has been deleted.", "WARNING", Alert.OK, this, null, null, Alert.OK);
					} else {
						Alert.show("You do not have permission to view this product order.", "WARNING", Alert.OK, this, null, null, Alert.OK);
					}
				}
			}
			
			public function lookupProductOrder(productOrderNumber:String):void {
				var params:Object = new Object();
				params.productOrderNumber = productOrderNumber;
				getProductOrder.send(params);
			}
			
			private function saveLedgerEntries():void {
				if (dirty.isDirty()) {
					var params:Object = new Object();
					var productLedgerEntryList:String = "<productLedgerEntryList>";
					for each (var entry:XML in ledgerEntries) {
						productLedgerEntryList += entry.toXMLString();
					}
					productLedgerEntryList += "</productLedgerEntryList>";
					params.productLedgerEntryList = productLedgerEntryList;
					saveProductLedgerEntryList.send(params);
				}
			}
			
			private function onSaveProductLedgerEntryList(event:ResultEvent):void {
				if (saveProductLedgerEntryList.lastResult.name() != "SUCCESS") {
					Alert.show(event.result..ERROR.@message.toString());
				} else {
					dirty.resetDirty();
					this.init();
				}
			}
			
		]]>
	</mx:Script>
	
	<mx:XMLListCollection id="ledgerEntries" source="{getProductLedgerEntries.lastResult..entry}"/>
	
	<mx:VBox width="100%" height="100%">
		<mx:VBox width="100%">
			<mx:HBox width="100%">
				<mx:HBox horizontalGap="0" width="100%" verticalAlign="middle">
					<mx:Image source="assets/review.png"/>
					<mx:Label id="titleLabel" styleName="titleLabel" text="{'Product Total: ' + productCount}" />
					<mx:Spacer width="100%"/>
					<mx:LinkButton id="addLedgerEntryButton" 
								   label="Add row" icon="@Embed('../../assets/add.png')" 
								   visible="{parentApplication.isAdminState}"
								   includeInLayout="{parentApplication.isAdminState}"
								   enabled="{parentDocument.browseTree.selectedItem != null &amp;&amp; parentDocument.browseTree.selectedItem.name() == 'product'}" 
								   click="showAddLedgerEntryWindow()"/>
				</mx:HBox>
			</mx:HBox>
		</mx:VBox>
		
		
		<mx:VBox width="100%" height="100%" styleName="panelBox"   backgroundSize="100%" >
			
			<mx:DataGrid id="ledgerGrid" width="100%" wordWrap="true" height="100%" dataProvider="{ledgerEntries}" editable="{parentApplication.isAdminState || parentApplication.isSuperAdmin}"
						 itemEditEnd="dirty.setDirty()">
				
				<mx:columns>
					<mx:DataGridColumn dataField="@date" width="100" headerWordWrap="true" headerText="Operation Date" editable="false"/>
					<mx:DataGridColumn dataField="@qty" width="40" id="quantity" headerText="Qty" editable="false">
						<mx:itemRenderer>
							<mx:Component>
								<mx:Label color="{int(data.@qty) &lt; 0 ? 0xFF0000 : 0x197319}"/>
							</mx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn dataField="@productOrderNumber" width="105" headerWordWrap="true" headerText="Product Order #" editable="false">
						<mx:itemRenderer>
							<mx:Component>
								<mx:HBox verticalAlign="top" horizontalGap="0"  horizontalScrollPolicy="off" horizontalAlign="center">
									<mx:LinkButton label="{data.@productOrderNumber}" textDecoration="underline" fontSize="11" click="{outerDocument.lookupProductOrder(data.@productOrderNumber)}" color="#0000FF"/>
								</mx:HBox>
							</mx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn dataField="@requestNumber" width="100" headerWordWrap="true" headerText="Request #" editable="false">
						<mx:itemRenderer>
							<mx:Component>
								<mx:HBox verticalAlign="top" horizontalGap="0"  horizontalScrollPolicy="off" horizontalAlign="center">
									<mx:LinkButton label="{data.@requestNumber}" textDecoration="underline" fontSize="11" click="{parentApplication.showExperiment(data.@requestNumber, false)}" color="#0000FF"/>
								</mx:HBox>
							</mx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn dataField="@comment" headerWordWrap="true" width="400" headerText="Comment" editable="false"/>
					<mx:DataGridColumn dataField="@notes" headerWordWrap="true" headerText="Notes" />
				</mx:columns>
			</mx:DataGrid>
			
			<mx:HBox width="100%" horizontalAlign="right" paddingRight="1" visible="{parentApplication.isAdminState || parentApplication.isSuperAdmin}" includeInLayout="{parentApplication.isAdminState || parentApplication.isSuperAdmin}">
				<util:DirtyNote id="dirty" />
				<mx:Button id="saveButton" label="Save"
						   icon="@Embed('../../assets/action_save.gif')"
						   click="saveLedgerEntries()">
				</mx:Button>
			</mx:HBox>
			
		</mx:VBox>
		
	</mx:VBox>
	
</mx:Canvas>

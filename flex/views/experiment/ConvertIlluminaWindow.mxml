<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" show="init()" showCloseButton="false" title="{'Convert ' + this.request.@requestCategory + ' Experiment'}">
	
	<mx:HTTPService  
		id="convertIllumina" 
		url="ConvertIllumina.gx"
		concurrency="multiple"
		destination="convertIllumina"
		resultFormat="e4x"
		showBusyCursor="true"
		result="onConvertIllumina(event)"
		fault="parentApplication.onFailHttpRequest('Unable to convert Illumina request', event)"
		method="POST"
		useProxy="false">
	</mx:HTTPService>
	
	
	
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.controls.Alert;
			
			[Bindable]
			private var colors:ArrayCollection = new ArrayCollection([0xFFFFFF, 0xEDEDE9]);
			
			[Bindable]
			private var preparedAppList:XMLListCollection = null;
			
			[Bindable]
			private var themeList:XMLListCollection = null;
			
			public var filteredAppList:XMLListCollection = null;
			
			[Bindable]
			public var request:Object = null;
			
			[Bindable]
			public var convertToCategory:String = "";
			
			private var idApplicationTheme:String = null;
			
			public function init():void {
				var numberSequencingCyclesAllowedSorter:Sort = new Sort();
				numberSequencingCyclesAllowedSorter.compareFunction = this.sortNumberSequencingCyclesAllowed;
				numberSequencingCyclesAllowed.sort = numberSequencingCyclesAllowedSorter;
				numberSequencingCyclesAllowed.refresh();
				var prevCustom:String = '';
				
				
				for each(var obj:Object in numberSequencingCyclesAllowed) {
					if (prevCustom != obj.@isCustom) {
						if (obj.@isCustom == 'N') {
							obj.@first='S';
						} else {
							obj.@first='C';
						}
					} else {
						obj.@first = '';
					}
					prevCustom = obj.@isCustom;
					
					//					var key:String = this.makePriceKey(obj);
					//					var price:String = this.priceMap[key];
					//					if (price == null) {
					//						price = "";
					//					}
					//					obj.@price = price;
				}
				
				numberSequencingCyclesAllowed.refresh();
				
				filteredAppList = new XMLListCollection(parentApplication.dictionaryManager.getEntries('hci.gnomex.model.Application'));
				filteredAppList.filterFunction = filterApplication;
				filteredAppList.refresh();
				
				
				// Map the apps by theme
				this.applicationThemeRepeater.dataProvider = null;
				this.applicationRepeater.dataProvider = null;
				var themeMap:Array = new Array();
				preparedAppList = new XMLListCollection();
				for each(var item:Object in this.filteredAppList) {
					var de:XMLList = parentApplication.dictionaryManager.getEntry("hci.gnomex.model.ApplicationTheme", item.@idApplicationTheme);
					if (de.length() >= 1) {
						themeMap[item.@idApplicationTheme.toString()] = de[0];
					}
					//					if (priceMap != null && priceMap[item.@codeApplication.toString()] != null && localPrepByCore == 'Y') {
					//						item.@price = priceMap[item.@codeApplication.toString()];
					//					} else {
					//						item.@price = "";
					//					}
					preparedAppList.addItem(item.copy());
				}
				
				themeList = new XMLListCollection();
				for each(var theme:Object in themeMap) {
					themeList.addItem(theme);
				}
				
				themeList.sort = this.applicationSorter;	
				themeList.refresh();
				this.applicationThemeRepeater.dataProvider = themeList;
				themeList.refresh();
				this.applicationRepeater.dataProvider = preparedAppList;
				preparedAppList.refresh();
			}
			
			private function filterApplication(item:Object):Boolean {
				var codeRequestCategory:String = this.convertToCategory;
				var samples:XMLListCollection = new XMLListCollection(this.request..Sample);
				if (item.@value == "") {
					return false;
				} 
//				if (item.@value == request.@codeApplication) {
//					return true;
//				}
				if (item.@isActive == 'N') {
					return false;	
				}
				var doesMatchRequestCategory:Boolean = false;
				var theApplications:XMLList = parentApplication.dictionaryManager.xml.Dictionary.(@className == 'hci.gnomex.model.RequestCategoryApplication').DictionaryEntry.(@value != '' && @codeApplication == item.@value.toString());
				for each (var xref:Object in theApplications) {
					if (xref.@codeRequestCategory.toString() == codeRequestCategory) {
						doesMatchRequestCategory = true;
						break;
					}
				}
				
				var doesMatchSeqPrepByCore:Boolean = false;
				if (doesMatchRequestCategory) {
					if (samples.length == 0 || !parentApplication.isInternalExperimentSubmission) {
						doesMatchSeqPrepByCore = true;
					} else {
						for each (var sample:Object in samples) {
							if ((sample.@seqPrepByCore == "Y" && item.@onlyForLabPrepped == "N") || sample.@seqPrepByCore == "N") {
								doesMatchSeqPrepByCore = true;
								break;
							}
						}
					}
				}
				return doesMatchRequestCategory && doesMatchSeqPrepByCore;
			}
			
			private function closeWindow():void{
				PopUpManager.removePopUp(this);
				parentApplication.navExperimentView.refreshExperiments();
			}
			
			private function save():void{
				var params:Object = new Object();
				params.idRequest = this.request.@idRequest;
				
				params.idNumberSequencingCyclesAllowed = numberSequencingCyclesAllowed.getItemAt(numberSequencingCyclesRadioGroup.selection.repeaterIndex).@idNumberSequencingCyclesAllowed;
				params.idNumberSequencingCycles = numberSequencingCyclesAllowed.getItemAt(numberSequencingCyclesRadioGroup.selection.repeaterIndex).@idNumberSequencingCycles;
				params.codeApplication = preparedAppList.getItemAt(radioGroupSeqApp.selection.repeaterIndex).@codeApplication;
				
				var protocol:XML = parentApplication.dictionaryHelper.getProtocolFromApplication(params.codeApplication);
				params.idSeqLibProtocol = protocol == null ? "" : protocol.@idSeqLibProtocol.toString();
				
				convertIllumina.send(params);
				
			}
			
			private function onConvertIllumina(event:ResultEvent):void{
				if(convertIllumina.lastResult.name() == 'SUCCESS'){
					Alert.show("The request has been converted. You may need to adjust billing for the request.");
					this.closeWindow();
				} else{
					Alert.show(convertIllumina.lastResult..ACTMESSAGE.@TEXT)
				}
				
			}
			
			private function sortNumberSequencingCyclesAllowed(obj1:Object, obj2:Object, fields:Array=null):int {
				if (obj1 == null && obj2 == null) {
					return 0;
				} else if (obj1 == null) {
					return 1;
				} else if (obj2 == null) {
					return -1;
				} else {
					
					if (obj1.@value == '') {
						return -1;
					} else if (obj2.@value == '') {
						return 1;
					} else {
						var isCustom1:String = obj1.@isCustom;
						var isCustom2:String = obj2.@isCustom
						var numberCycles1:Number = obj1.@numberSequencingCyclesDisplay;
						var numberCycles2:Number = obj2.@numberSequencingCyclesDisplay;
						var sortOrder1:Number = obj1.@sortOrder == '' ? -1 : obj1.@sortOrder;
						var sortOrder2:Number = obj2.@sortOrder == '' ? -1 : obj2.@sortOrder;
						
						if (isCustom1 < isCustom2) {
							return -1;
						} else if (isCustom1 > isCustom2) {
							return 1;
						} else {
							if (sortOrder1 < sortOrder2) {
								return -1;
							} else if (sortOrder1 > sortOrder2) {
								return 1;
							} else {
								if (numberCycles1 < numberCycles2) {
									return -1;
								} else if (numberCycles1 > numberCycles2) {
									return 1;
								} else {
									return 0;
								}
							} 
						} 
					}
				}			
			}
			
			private function sortApplicationsOnOrder(obj1:Object, obj2:Object, fields:Array = null):int{
				if (obj1 == null && obj2 == null) {
					return 0;
				} else if (obj1 == null) {
					return 1;
				} else if (obj2 == null) {
					return -1;
				} else {
					var sortOrder1:Number = obj1.@sortOrder == "" ? 999 : obj1.@sortOrder;
					var sortOrder2:Number = obj2.@sortOrder == "" ? 999 : obj2.@sortOrder;
					if (sortOrder1 < sortOrder2) {
						return -1;
					} else if (sortOrder1 > sortOrder2) {
						return 1;
					} else {
						return 0;
					}
				}
			}
			
			private function filterAppList():void{
				preparedAppList.filterFunction = filterByTheme;
				preparedAppList.refresh();
			}
			
			private function filterByTheme(item:Object):Boolean{
				if(item.@idApplicationTheme == this.idApplicationTheme){
					return true;
				} else{
					return false;
				}
			}
			
		]]>
	</mx:Script>
	
	<mx:Sort id="applicationSorter" compareFunction="sortApplicationsOnOrder"/>
	<mx:XMLListCollection id="numberSequencingCyclesAllowed" source="{parentApplication.dictionaryManager.xml.Dictionary.(@className == 'hci.gnomex.model.NumberSequencingCyclesAllowed').DictionaryEntry.(@value != '' &amp;&amp; @isActive == 'Y' &amp;&amp; @codeRequestCategory == this.convertToCategory)}"/>
	
	<mx:VBox width="100%" id="hbox1" height="100%" verticalGap="12">
		<mx:VBox verticalGap="0" id="numberSequencingCyclesBox" width="100%" styleName="normalBox">
			<mx:Text text="1.) Choose a new sequencing protocol"/>
			<mx:HRule width="100%"/>
			<mx:RadioButtonGroup id="numberSequencingCyclesRadioGroup" />
			<mx:Repeater id="numberSequencingCyclesRepeater" dataProvider="{numberSequencingCyclesAllowed}">
				<mx:Label text="{parentApplication.getRequestCategoryProperty(request.@idCoreFacility, request.@codeRequestCategory, parentApplication.PROPERTY_HISEQ_RUN_TYPE_LABEL_STANDARD)}" textDecoration="underline" visible="{numberSequencingCyclesRepeater.currentItem.@first == 'S'}" includeInLayout="{numberSequencingCyclesRepeater.currentItem.@first == 'S'}"/>
				<mx:HBox visible="{numberSequencingCyclesRepeater.currentItem.@first == 'C'}" includeInLayout="{numberSequencingCyclesRepeater.currentItem.@first == 'C'}" paddingTop="10">
					<mx:Label text="{parentApplication.getRequestCategoryProperty(request.@idCoreFacility, request.@codeRequestCategory, parentApplication.PROPERTY_HISEQ_RUN_TYPE_LABEL_CUSTOM)}" textDecoration="underline"/>
					<mx:Label text="{parentApplication.getRequestCategoryProperty(request.@idCoreFacility, request.@codeRequestCategory, parentApplication.PROPERTY_HISEQ_RUN_TYPE_CUSTOM_WARNING)}" styleName="warningLabelSevere" />
				</mx:HBox>
				<mx:HBox verticalAlign="middle" width="100%">
					<mx:RadioButton  label="{numberSequencingCyclesRepeater.currentItem.@display}" 
									 paddingLeft="0" paddingRight="1"
									 value="{numberSequencingCyclesRepeater.currentItem.@value}"
									 groupName="numberSequencingCyclesRadioGroup" width="400"/>
					<mx:Label text="{numberSequencingCyclesRepeater.currentItem.@price}" toolTip="Price per lane"/>
				</mx:HBox>
			</mx:Repeater>
		</mx:VBox>
		
		<mx:VBox styleName="normalBox">
			<mx:Text text="2.) Verify sequencing experiment type"/>
			<mx:HRule width="100%"/>
			<mx:HBox width="100%" paddingLeft="0" paddingRight="0" paddingTop="0" paddingBottom="0" horizontalScrollPolicy="off">
				<mx:RadioButtonGroup id="radioGroupApplicationTheme"/>
				<mx:Repeater id="applicationThemeRepeater" dataProvider="{themeList}">
					<mx:RadioButton label="{applicationThemeRepeater.currentItem.@display}" selected="{this.request.Application.@idApplicationTheme == applicationThemeRepeater.currentItem.@idApplicationTheme}" groupName="radioGroupApplicationTheme" click="{idApplicationTheme = event.currentTarget.getRepeaterItem().@idApplicationTheme; filterAppList();}" fontWeight="bold" enabled="true" visible="true" />
				</mx:Repeater>
			</mx:HBox>
			
			<mx:RadioButtonGroup id = "radioGroupSeqApp">       	
			</mx:RadioButtonGroup> 
			<mx:VBox height="100%" verticalGap="0" paddingLeft="2" paddingRight="2" paddingBottom="0" paddingTop="0" id="seqAppBox" horizontalScrollPolicy="off">
				<mx:Label text="{radioGroupApplicationTheme.selectedValue}" id="chosenThemeLabel" width="400" fontWeight="bold" visible="{radioGroupApplicationTheme.selectedValue != null}" includeInLayout="{radioGroupApplicationTheme.selectedValue != null}" />
				<mx:Repeater id="applicationRepeater" dataProvider="{preparedAppList}">
					<mx:HBox verticalAlign="middle" width="100%" id="applicationRepeaterHBox" visible="{radioGroupApplicationTheme.selectedValue != null}" includeInLayout="{radioGroupApplicationTheme.selectedValue != null}">
						<mx:RadioButton id="applicationButton" groupName="radioGroupSeqApp" 
										label="{applicationRepeater.currentItem.@display}" 
										value="{applicationRepeater.currentItem.@value}" 
										fontSize="11" paddingTop="0" paddingBottom="0" selected="{this.request.Application.@codeApplication == applicationRepeater.currentItem.@codeApplication}"
										visible = "true" includeInLayout="true" width="550"/>
						<mx:Label text="{applicationRepeater.currentItem.@price}" 
								  toolTip="Price per sample" visible="true" includeInLayout="true"/>
					</mx:HBox>
				</mx:Repeater>
			</mx:VBox>
		</mx:VBox>
		
		<mx:ControlBar width="100%" horizontalAlign="right" paddingTop="0" paddingRight="0" paddingLeft="0" paddingBottom="0" verticalAlign="middle">
			<mx:Button id="saveButton" label="Save"
					   icon="@Embed('../../assets/action_save.gif')" 
					   click="save()" 
					   enabled="{numberSequencingCyclesRadioGroup.selectedValue != null &amp;&amp; radioGroupSeqApp.selectedValue != null}" 
					   disabledIcon="@Embed(source='../../assets/save_disable.png')" />
			<mx:Button label="Cancel" click="closeWindow()"/>
		</mx:ControlBar>
	</mx:VBox>
	
</mx:TitleWindow>

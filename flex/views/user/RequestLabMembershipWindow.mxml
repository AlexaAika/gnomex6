<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" title="Choose Labs" width="400" height="300" creationComplete="init()">
	
	<mx:HTTPService 
		id="requestLabMembership" 
		url="RequestLabMembership.gx"
		showBusyCursor="true"
		resultFormat="e4x"
		concurrency="multiple"
		result="onRequestLabMembership(event)"
		fault="parentApplication.onFailHttpRequest('Unable to request lab membership', event)"
		useProxy="false">
	</mx:HTTPService >
	
	<mx:HTTPService 
		id="getAllLabs" 
		url="GetAllLabs.gx"
		showBusyCursor="true"
		resultFormat="e4x"
		concurrency="multiple"
		result="onGetAllLabs(event)"
		fault="parentApplication.onFailHttpRequest('Unable to get lab list', event)"
		useProxy="false">
	</mx:HTTPService >
	
	
	<mx:Script>
		<![CDATA[
			import hci.flex.controls.CheckBox;
			
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			[Bindable]
			private var labList:XMLListCollection;
			
			[Bindable]
			private var selectedLabsCount:int = 0;
			
			public var currentLabList:XMLListCollection;
			
			public function init():void{
				getAllLabs.send();
			}
			
			private function onGetAllLabs(event:ResultEvent):void{
				if(getAllLabs.lastResult.name() == 'LabList'){
					labList = new XMLListCollection(new XMLList(getAllLabs.lastResult.Lab));
					labList.filterFunction = filterLabs;
					labList.refresh();
				} else{
					Alert.show(getAllLabs.lastResult..ACTMESSAGE.@TEXT)
				}
			}
			
			//Don't show labs that we can already submit to
			private function filterLabs(item:Object):Boolean{
				if(searchBox.text.length > 0){
					var search:String = searchBox.text.toLowerCase();
					var name:String = item.@name.toLowerCase();
					
					if(name.indexOf(search) != -1 && item.@isMyLab == 'N'){
						return true;
					} else{
						return false;
					}
					
				} else{
					if(item.@isMyLab == 'Y'){
						return false;
					} else{
						return true;
					}
				}
			}
			
			private function toggleLabCheck(event:ListEvent):void {
				if (event.columnIndex == 0) {
					return;
				}
				if (this.labGrid.selectedItem.@isSelected == "true") {
					labGrid.selectedItem.@isSelected = "false";
				} else {
					labGrid.selectedItem.@isSelected = "true";
				}
			}
			
			private function requestMembership():void{
				var params:Object = new Object();
				var labs:String = "";
				for each(var lab:XML in labList){
					if(lab.hasOwnProperty("@isSelected") && lab.@isSelected == 'true'){
						labs += lab.@idLab + ",";
					}
				}
				params.idLabs = labs.substring(0, labs.lastIndexOf(","));
				requestLabMembership.send(params);
			}
			
			private function onRequestLabMembership(event:ResultEvent):void{
				if (requestLabMembership.lastResult.name() == "SUCCESS") {
					Alert.show("The P.I's of the labs you selected have been notified of your request.  You will be notified via email if they approve or deny your request.");
					PopUpManager.removePopUp(this);
				} else { 
					Alert.show("An error occurred while requesting lab membership.");
				}	
				
			}
			
			private function filterLabsBySearch():void{
				labList.filterFunction = filterLabs;
				labList.refresh();
			}
			
		]]>
	</mx:Script>
	
	<mx:HBox width="100%">
		<mx:Label id="searchLabel" text="Search: "/>
		<mx:TextInput id="searchBox" width="100%" change="filterLabsBySearch()" backgroundColor="#FFFFFF"/>
		
	</mx:HBox>
	
	<mx:DataGrid width="100%" height="100%" 
				 id="labGrid"
				 itemClick="toggleLabCheck(event); {labGrid.selectedItem.@isSelected == 'true' ? selectedLabsCount++ : selectedLabsCount--}"
				 dataProvider="{labList}" >
		<mx:columns>
			<mx:DataGridColumn headerText=" " 
							   width="30" 
							   editable="true"                        	
							   dataField="@isSelected" 
							   editorDataField="selected" sortable="false"
							   itemRenderer="{hci.flex.controls.CheckBox.getFactory('true', 'false', '@isSelected', true)}">
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="Group" dataField="@name"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:ControlBar horizontalAlign="left">
		<mx:Spacer width="100%"/>
		<mx:Button label="Request Membership" id="saveButton" click="requestMembership()" enabled="{this.selectedLabsCount > 0}" />
		<mx:Button label="Cancel" click="{PopUpManager.removePopUp(this)}"/>
	</mx:ControlBar>
	
	
</mx:TitleWindow>
